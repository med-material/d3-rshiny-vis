#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
#             pam_rate = unique(ifelse(Condition == "IO", trial_rate_sham, pam_rate)),
#             pam_rate = unique(ifelse(Condition == "MF", trial_rate_mitigate, pam_rate)),
#             time_total = sum(time_delta),
#             PercNormalized = unique(PercNormalized),
#             Gender = unique(Gender),
#             Age = unique(Age),
#             FrustNormalized = unique(FrustNormalized),
#             Order = unique(Order),
#             Hardest = unique(Hardest),
#             Easiest = unique(Easiest))
source("C:/Users/aldry/OneDrive/Bureau/stage A4/recherche/rstudio d3/clone/01/WhackAMoleWinterTest2022/wamwinter22_analysis.R")
library(plotly)
library(tidyverse)
library(lubridate)
options("digits.secs"=6)
fig <- plot_ly() %>%
config(scrollZoom = TRUE, displaylogo = FALSE, modeBarButtonsToRemove = c("pan2d","select2d","hoverCompareCartesian", "toggleSpikelines","zoom2d","toImage", "sendDataToCloud", "editInChartStudio", "lasso2d", "drawclosedpath", "drawopenpath", "drawline", "drawcircle", "eraseshape", "autoScale2d", "hoverClosestCartesian","toggleHover", "")) %>%
layout(dragmode = "pan", showlegend=T, xaxis=list(mirror=T, ticks='outside', showline=T), yaxis=list(mirror=T, ticks='outside', showline=T))
load('data_wam.rda')
library(plotly)
library(tidyverse)
library(lubridate)
options("digits.secs"=6)
fig <- plot_ly() %>%
config(scrollZoom = TRUE, displaylogo = FALSE, modeBarButtonsToRemove = c("pan2d","select2d","hoverCompareCartesian", "toggleSpikelines","zoom2d","toImage", "sendDataToCloud", "editInChartStudio", "lasso2d", "drawclosedpath", "drawopenpath", "drawline", "drawcircle", "eraseshape", "autoScale2d", "hoverClosestCartesian","toggleHover", "")) %>%
layout(dragmode = "pan", showlegend=T, xaxis=list(mirror=T, ticks='outside', showline=T), yaxis=list(mirror=T, ticks='outside', showline=T))
load('data_wam.rda')
library(plotly)
library(tidyverse)
library(lubridate)
options("digits.secs"=6)
fig <- plot_ly() %>%
config(scrollZoom = TRUE, displaylogo = FALSE, modeBarButtonsToRemove = c("pan2d","select2d","hoverCompareCartesian", "toggleSpikelines","zoom2d","toImage", "sendDataToCloud", "editInChartStudio", "lasso2d", "drawclosedpath", "drawopenpath", "drawline", "drawcircle", "eraseshape", "autoScale2d", "hoverClosestCartesian","toggleHover", "")) %>%
layout(dragmode = "pan", showlegend=T, xaxis=list(mirror=T, ticks='outside', showline=T), yaxis=list(mirror=T, ticks='outside', showline=T))
load('data_wam.rda')
library(shiny)
library(r2d3)
AllData <- read.csv(file = "data/log_Event.csv",stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ";")
library(shiny)
library(r2d3)
AllData <- read.csv(file = "data/log_Event.csv",stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ";")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(shiny)
library(r2d3)
library(dplyr)
AllData <- read.csv(file = "data/log_Event.csv",stringsAsFactors = FALSE,
strip.white = TRUE,                    sep = ";")
AllData %>% select(Event, MoleIndexX, MoleIndexY) %>% view()
library(dplyr)
AllData %>% select(Event, MoleIndexX, MoleIndexY) %>% view()
install.packages("tidyverse")
library(tidyverse)
AllData %>% select(Event, MoleIndexX, MoleIndexY) %>% view()
AllData %>% select(Event, MoleIndexX, MoleIndexY, CurrentMoleToHitId) %>% view()
AllData %>% select(Event, MoleIndexX, MoleIndexY, MoleId) %>% view()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp('C:/Users/aldry/OneDrive/Bureau/stage A4/recherche/rstudio d3/graphTimeLine/graphTimelineJS02')
runApp('C:/Users/aldry/OneDrive/Bureau/stage A4/recherche/rstudio d3/moles/moleWall02')
runApp('C:/Users/aldry/OneDrive/Bureau/stage A4/recherche/rstudio d3/moles/moleWall_laser_controler')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
